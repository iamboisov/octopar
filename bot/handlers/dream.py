from aiogram import Router, F, types, Bot
from aiogram.types import Message
from aiogram.filters import Command
from langchain.schema import HumanMessage, SystemMessage
from langchain.chat_models.gigachat import GigaChat
import time
import api_keys_import as KEYS
import db_functions.crud as db
import asyncio


router = Router()
bot = Bot(token=KEYS.BOT_TOKEN)
MIN_LENGTH = 140

# –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
@router.message(Command("start"))
async def start(message: types.Message):
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.chat.id
    name = message.from_user.first_name
    telegram_username = message.from_user.username
    existing_user = await db.collection.find_one({"_id": user_id})

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if not existing_user:
        await db.add_user(user_id, name, telegram_username)
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–æ–ª–∫–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤ —Å –ò–ò. –ö–∞–∫–æ–π —Å–æ–Ω —Ç–µ–±–µ –ø—Ä–∏—Å–Ω–∏–ª—Å—è?")
    else:
        await message.answer("–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –ö–∞–∫–æ–π —Å–æ–Ω —Ç–µ–±–µ –ø—Ä–∏—Å–Ω–∏–ª—Å—è?")

    await db.update_user(user_id, name, telegram_username)


# –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(F.text)
async def send_answer(message: Message):
    sent_message = await message.answer(f"–¢–æ–ª–∫—É—é...‚è≥")
    user_id = message.chat.id
    name = message.from_user.first_name
    telegram_username = message.from_user.username
    await db.update_user(user_id, name, telegram_username)

    await asyncio.sleep(4)

    gigachat = GigaChat(credentials=KEYS.GIGACHAT_KEY, verify_ssl_certs=False)
    messages = [
        SystemMessage(content="–ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π –∏ –Ω–∞–ø–∏—à–∏ 3 –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å–Ω–∞. –í –∫–æ–Ω—Ü–µ —É–∫–∞–∂–∏ 'üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ:' –∏ –Ω–∞–ø–∏—à–∏ –Ω–µ–æ–±—ã—á–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é."),
        HumanMessage(content=message.text)
    ]
    res = gigachat(messages)
    print(res.content)

    if len(res.content) < MIN_LENGTH:
        await message.answer("–ú—ã –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–µ–º—Å—è –ø–æ–ª–∏—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–µ—â–∞–µ—Ç: –ù–∞—Å–∏–ª–∏–µ, –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, –û—Ç–∫—Ä—ã—Ç–∞—è –°–µ–∫—Å—É–∞–ª–∏–∑–∞—Ü–∏—è.\n\n–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∏–∑–±–µ–≥–∞—Ç—å —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. \n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!üêë")
    else:
        await message.answer(res.content)

    await bot.delete_message(chat_id=message.chat.id, message_id=sent_message.message_id)
    await bot.delete_message(chat_id=message.chat.id, message_id=sent_message.message_id)